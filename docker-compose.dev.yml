version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: myrox-postgres-dev
    environment:
      POSTGRES_DB: myrox_db
      POSTGRES_USER: myrox_user
      POSTGRES_PASSWORD: myrox_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./myROX-api/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myrox_user -d myrox_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - myrox-network

  # API myROX Fastify
  api:
    build:
      context: ./myROX-api
      dockerfile: Dockerfile.dev
    container_name: myrox-api-dev
    environment:
      PORT: 3000
      NODE_ENV: development
      DATABASE_URL: "postgresql://myrox_user:myrox_password@postgres:5432/myrox_db"
    ports:
      - "3001:3000"
    volumes:
      - ./myROX-api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - myrox-network

  # Application Web Frontend avec hot reload
  web:
    build:
      context: ./myrox-web
      dockerfile: Dockerfile.dev
    container_name: myrox-web-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3002:3002"
    volumes:
      - ./myrox-web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - myrox-network

  # pgAdmin pour administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: myrox-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@myrox.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - myrox-network

volumes:
  postgres_data_dev:
    driver: local

networks:
  myrox-network:
    driver: bridge 